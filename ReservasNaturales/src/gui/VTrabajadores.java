/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import aplicacion.Usuario;
import java.awt.Frame;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

/**
 *
 * @author alumnogreibd
 */
public class VTrabajadores extends javax.swing.JDialog {
    aplicacion.FachadaAplicacion fa;
    private boolean crearTrabajador;
    /**
     * Creates new form VTrabajadores
     */
    public VTrabajadores(java.awt.Frame parent, boolean modal, aplicacion.FachadaAplicacion fa) {
        super(parent, modal);
        this.fa=fa;
        initComponents();
        TablaTrabajadores.setModel(new ModeloTablaTrabajadores());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TextFileBuscarTrabajadores = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        dniCheck = new javax.swing.JCheckBox();
        nombreCheck = new javax.swing.JCheckBox();
        ScrollPaneTrabajadores = new javax.swing.JScrollPane();
        TablaTrabajadores = new javax.swing.JTable();
        btnMisiones = new javax.swing.JButton();
        bntNuevo = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        bntMoverArea = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Trabajadores");
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        dniCheck.setSelected(true);
        dniCheck.setText("dni");

        nombreCheck.setText("Nombre");

        TablaTrabajadores.setModel(new ModeloTablaTrabajadores());
        TablaTrabajadores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaTrabajadoresMouseClicked(evt);
            }
        });
        ScrollPaneTrabajadores.setViewportView(TablaTrabajadores);

        btnMisiones.setText("Misiones");

        bntNuevo.setText("Nuevo");
        bntNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntNuevoActionPerformed(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        bntMoverArea.setText("Mover Área");
        bntMoverArea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntMoverAreaActionPerformed(evt);
            }
        });

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ScrollPaneTrabajadores)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(dniCheck)
                                .addGap(52, 52, 52)
                                .addComponent(nombreCheck)
                                .addGap(0, 146, Short.MAX_VALUE))
                            .addComponent(TextFileBuscarTrabajadores))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscar)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bntNuevo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bntMoverArea)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnMisiones)
                        .addGap(109, 109, 109)
                        .addComponent(btnActualizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSalir)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(btnBuscar))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(TextFileBuscarTrabajadores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dniCheck)
                    .addComponent(nombreCheck))
                .addGap(18, 18, 18)
                .addComponent(ScrollPaneTrabajadores, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnMisiones)
                    .addComponent(bntNuevo)
                    .addComponent(btnActualizar)
                    .addComponent(bntMoverArea)
                    .addComponent(btnSalir)
                    .addComponent(btnEliminar))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        buscarUsuarios();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseClicked

    private void TablaTrabajadoresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaTrabajadoresMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_TablaTrabajadoresMouseClicked

    private void bntNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntNuevoActionPerformed
        // TODO add your handling code here:
    Usuario nuevoUsuario = new Usuario("", "", 0.0f,0);

    // Obtener el modelo de la tabla
    ModeloTablaTrabajadores mt = (ModeloTablaTrabajadores) TablaTrabajadores.getModel();

    mt.anhadeFila(nuevoUsuario);

    int lastRow = mt.getRowCount() - 1;    TablaTrabajadores.setRowSelectionInterval(lastRow, lastRow);

    TablaTrabajadores.editCellAt(lastRow, 0);

   
    TablaTrabajadores.requestFocusInWindow();
        TablaTrabajadores.requestFocusInWindow();
        
        crearTrabajador=true;
       /* Usuario nuevoUsuario = new Usuario("","",0,0); 

        // Obtener el modelo de la tabla
        ModeloTablaTrabajadores mt = (ModeloTablaTrabajadores) TablaTrabajadores.getModel();

        // Añadir la nueva fila vacía al modelo
        mt.setFilas(fa.obtenerTodosLosTrabajadores());
        mt.anhadeFila(nuevoUsuario);

        // Seleccionar la última fila para editar
        int lastRow = mt.getRowCount() - 1;
        TablaTrabajadores.setRowSelectionInterval(lastRow, lastRow);
        TablaTrabajadores.editCellAt(lastRow, 0); // Empieza a editar en la primera columna
        TablaTrabajadores.requestFocusInWindow();

        // Obtener los valores de la nueva fila
        String dni = (String) mt.getValueAt(lastRow, 0); // Suponiendo que el DNI está en la primera columna
        String nombre = (String) mt.getValueAt(lastRow, 1); // Suponiendo que el nombre está en la segunda columna
        int horas = (Integer) mt.getValueAt(lastRow, 2); // Suponiendo que las horas están en la tercera columna
        float sueldo = (Float) mt.getValueAt(lastRow, 3); // Suponiendo que el sueldo está en la cuarta columna

        // Ahora que tienes los valores de la tabla, los pasas al método para agregar el trabajador a la base de datos
        fa.nuevoTrabajador(dni, nombre, horas, sueldo);*/
    }//GEN-LAST:event_bntNuevoActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // Obtener el modelo de la tabla
        ModeloTablaTrabajadores mt = (ModeloTablaTrabajadores) TablaTrabajadores.getModel();

        // Obtener la lista de trabajadores de la tabla
        List<Usuario> trabajadores = mt.getFilas();

        
        if (crearTrabajador) {
            
            String dni = (String) mt.getValueAt(mt.getRowCount() - 1, 0);
            String nombre = (String) mt.getValueAt(mt.getRowCount() - 1, 1);
            int horas = (Integer) mt.getValueAt(mt.getRowCount() - 1, 2); 
            float sueldo = (Float) mt.getValueAt(mt.getRowCount() - 1, 3); 

            
            fa.nuevoTrabajador(dni, nombre, horas, sueldo);

            
            crearTrabajador = false;
        }

        
        for (Usuario t : trabajadores) {
            fa.actualizarTrabajador(t); // Actualiza cada trabajador en la base de datos
        }

        
        VAviso aviso = new VAviso((Frame) getParent(), true, "Cambios guardados correctamente.");
        aviso.setVisible(true);
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void bntMoverAreaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntMoverAreaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bntMoverAreaActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        int selectedRow=TablaTrabajadores.getSelectedRow();
        
                
                
        if (selectedRow!=-1) {
            ModeloTablaTrabajadores mt=(ModeloTablaTrabajadores) TablaTrabajadores.getModel();
            Usuario seleccionado=mt.getFila(selectedRow);
            int confirm = javax.swing.JOptionPane.showConfirmDialog(this, 
            "¿Estás seguro de que deseas eliminar al trabajador con DNI: " + seleccionado.getDni() + "?",
            "Confirmar eliminación", 
            javax.swing.JOptionPane.YES_NO_OPTION);

            if (confirm == javax.swing.JOptionPane.YES_OPTION) {

                fa.eliminarTrabajador(seleccionado.getDni());
                mt.setFilas(fa.obtenerTodosLosTrabajadores());

                VAviso aviso = new VAviso((Frame)getParent(), true, "Trabajador eliminado correctamente.");
                aviso.setVisible(true);
            }
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, 
                "Debes seleccionar un trabajador para eliminar.",
                "Error", 
                javax.swing.JOptionPane.ERROR_MESSAGE);

            }   
    }//GEN-LAST:event_btnEliminarActionPerformed

    /**
     * @param args the command line arguments
     */
 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ScrollPaneTrabajadores;
    private javax.swing.JTable TablaTrabajadores;
    private javax.swing.JTextField TextFileBuscarTrabajadores;
    private javax.swing.JButton bntMoverArea;
    private javax.swing.JButton bntNuevo;
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnMisiones;
    private javax.swing.JButton btnSalir;
    private javax.swing.JCheckBox dniCheck;
    private javax.swing.JCheckBox nombreCheck;
    // End of variables declaration//GEN-END:variables

private void buscarUsuarios(){
    ModeloTablaTrabajadores mt;
    mt=(ModeloTablaTrabajadores) TablaTrabajadores.getModel();
 
    String textoBusqueda=TextFileBuscarTrabajadores.getText().trim();
    nombreCheck.setVisible(true);
    dniCheck.setVisible(true);
    if (textoBusqueda.isEmpty()) {
        
     mt.setFilas(fa.obtenerTodosLosTrabajadores());
    }
    else if (dniCheck.isSelected()) {
        mt.setFilas(fa.obtenerTrabajadoresDni(textoBusqueda));
        nombreCheck.setVisible(false);
        
    }else if (nombreCheck.isSelected()) {
        mt.setFilas(fa.obtenerTrabajadoresNombre(textoBusqueda));
        dniCheck.setVisible(false);
        
    }else{
        VAviso va= new VAviso((Frame)getParent(), true, "Selecciona un criterio de búsqueda");
        va.setVisible(true);
        
    }
}
}
