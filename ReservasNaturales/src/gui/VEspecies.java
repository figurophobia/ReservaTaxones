/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package gui;
import aplicacion.Area;
import aplicacion.Ejemplar;

import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import aplicacion.Especie;
import aplicacion.FachadaAplicacion;
import aplicacion.Taxon;

import java.util.Iterator;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;


/**
 *
 * @author davidavirn
 */
public class VEspecies extends javax.swing.JDialog {

    /**
     * Creates new form VEspecies
     */
    FachadaAplicacion fa;
    private VPrincipal padre;
    boolean nuevo=false;
    boolean editar=false;
    private Especie e;

    public VEspecies(java.awt.Frame parent, boolean modal, FachadaAplicacion fa) {
        super(parent, modal);
        this.fa=fa;
        initComponents();
        padre=(VPrincipal) parent;
        VEspecies.this.refreshTaxones();
        nuevo=true;
        ActualizarButton.setEnabled(false);
        BorrarButton.setEnabled(false);
        MenuClinicasBoton.setEnabled(false);
        // Cando creamos unha nova especie non podemos crear aínda un ejemplar de esta
        panelGeneric.setEnabledAt(panelGeneric.indexOfComponent(panelEj), false);
        MasAlimentosBoton.setEnabled(false);

    }
    
    public VEspecies(java.awt.Frame parent, boolean modal, FachadaAplicacion fa, Especie e) {
        super(parent, modal);
        this.fa=fa;
        initComponents();
        padre=(VPrincipal) parent;
        EspecieNombreCientifico.setText(e.getNombreCientifico());
        NombreComunEspecie.setText(e.getNombreComun());
        textoDescripcion.setText(e.getDescripcion());
        refreshTaxones(e);
        editar=true;
        this.e=e;
        AnadirButton.setEnabled(false);
        MenuClinicasBoton.setEnabled(false);
        
        // Manexamos a tab de exemplares
        
        nombreCientifTF.setText(e.getNombreCientifico());
        refreshAreas();
        obtenerEjemplaresGeneric();
        listenerSeleccionEjemplar();
        MasAlimentosBoton.setEnabled(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelGeneric = new javax.swing.JTabbedPane();
        panelEsp = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        EspecieNombreCientifico = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        NombreComunEspecie = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        textoDescripcion = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        TaxonesComboBox = new javax.swing.JComboBox<>();
        AnadirButton = new javax.swing.JButton();
        ActualizarButton = new javax.swing.JButton();
        BorrarButton = new javax.swing.JButton();
        panelEj = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla_ejemplares = new javax.swing.JTable();
        btn_nuevoEjemplar = new javax.swing.JButton();
        btn_borrarEjemplar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        nombreCientifTF = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        moteTF = new javax.swing.JTextField();
        tf_fechaNacmiento = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jlabel9 = new javax.swing.JLabel();
        idTF = new javax.swing.JTextField();
        AreaComboBox = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        btn_ActualizarEjemplar = new javax.swing.JButton();
        MenuClinicasBoton = new javax.swing.JButton();
        buttonSalir = new javax.swing.JButton();
        MasAlimentosBoton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Nombre Científico");

        EspecieNombreCientifico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EspecieNombreCientificoActionPerformed(evt);
            }
        });

        jLabel2.setText("Nombre Común");

        NombreComunEspecie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NombreComunEspecieActionPerformed(evt);
            }
        });

        jLabel3.setText("Descripción");

        jLabel5.setText("Taxón de la especie");

        TaxonesComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TaxonesComboBoxActionPerformed(evt);
            }
        });

        AnadirButton.setText("Añadir");
        AnadirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnadirButtonActionPerformed(evt);
            }
        });

        ActualizarButton.setText("Actualizar");
        ActualizarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ActualizarButtonActionPerformed(evt);
            }
        });

        BorrarButton.setText("Borrar");
        BorrarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BorrarButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelEspLayout = new javax.swing.GroupLayout(panelEsp);
        panelEsp.setLayout(panelEspLayout);
        panelEspLayout.setHorizontalGroup(
            panelEspLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEspLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelEspLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelEspLayout.createSequentialGroup()
                        .addComponent(AnadirButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ActualizarButton)
                        .addGap(18, 18, 18)
                        .addComponent(BorrarButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(panelEspLayout.createSequentialGroup()
                        .addGroup(panelEspLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(panelEspLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(EspecieNombreCientifico)
                            .addComponent(NombreComunEspecie)
                            .addComponent(TaxonesComboBox, 0, 569, Short.MAX_VALUE)
                            .addComponent(textoDescripcion))))
                .addContainerGap())
        );
        panelEspLayout.setVerticalGroup(
            panelEspLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEspLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelEspLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(EspecieNombreCientifico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelEspLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(NombreComunEspecie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelEspLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(textoDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(panelEspLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(TaxonesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 124, Short.MAX_VALUE)
                .addGroup(panelEspLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AnadirButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ActualizarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BorrarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        panelGeneric.addTab("Especies", panelEsp);

        tabla_ejemplares.setModel(new ModeloTablaEjemplaresGeneral()
        );
        jScrollPane2.setViewportView(tabla_ejemplares);

        btn_nuevoEjemplar.setText("Nuevo");
        btn_nuevoEjemplar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nuevoEjemplarActionPerformed(evt);
            }
        });

        btn_borrarEjemplar.setText("Borrar");
        btn_borrarEjemplar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_borrarEjemplarActionPerformed(evt);
            }
        });

        jLabel6.setText("Nombre cientifico");

        nombreCientifTF.setEnabled(false);

        jLabel7.setText("Mote del ejemplar");

        tf_fechaNacmiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_fechaNacmientoActionPerformed(evt);
            }
        });

        jLabel8.setText("Fecha nacimiento");
        jLabel8.setName(""); // NOI18N

        jlabel9.setText("ID del ejemplar");

        idTF.setEnabled(false);

        jLabel9.setText("Área geográfica");

        btn_ActualizarEjemplar.setText("Actualizar");
        btn_ActualizarEjemplar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ActualizarEjemplarActionPerformed(evt);
            }
        });

        MenuClinicasBoton.setText("Menú Clinicas/Revisiones");
        MenuClinicasBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuClinicasBotonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelEjLayout = new javax.swing.GroupLayout(panelEj);
        panelEj.setLayout(panelEjLayout);
        panelEjLayout.setHorizontalGroup(
            panelEjLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEjLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelEjLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelEjLayout.createSequentialGroup()
                        .addComponent(jlabel9)
                        .addGap(158, 617, Short.MAX_VALUE))
                    .addGroup(panelEjLayout.createSequentialGroup()
                        .addGroup(panelEjLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addGroup(panelEjLayout.createSequentialGroup()
                                .addComponent(btn_nuevoEjemplar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_borrarEjemplar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_ActualizarEjemplar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(MenuClinicasBoton)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(panelEjLayout.createSequentialGroup()
                        .addGroup(panelEjLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addGroup(panelEjLayout.createSequentialGroup()
                                .addGroup(panelEjLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(panelEjLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(AreaComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tf_fechaNacmiento)
                                    .addComponent(moteTF)
                                    .addComponent(idTF)
                                    .addComponent(nombreCientifTF, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addContainerGap())))
        );
        panelEjLayout.setVerticalGroup(
            panelEjLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEjLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelEjLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(nombreCientifTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelEjLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlabel9)
                    .addComponent(idTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelEjLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(moteTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelEjLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(tf_fechaNacmiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelEjLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(AreaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelEjLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btn_ActualizarEjemplar, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(btn_borrarEjemplar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_nuevoEjemplar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(MenuClinicasBoton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jLabel8.getAccessibleContext().setAccessibleName("Fecha Nacimiento");

        panelGeneric.addTab("Ejemplares", panelEj);

        buttonSalir.setBackground(new java.awt.Color(231, 76, 60));
        buttonSalir.setForeground(new java.awt.Color(255, 255, 255));
        buttonSalir.setText("Salir");
        buttonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSalirActionPerformed(evt);
            }
        });

        MasAlimentosBoton.setText("Aumentar frecuencia alimentos misma especie y area");
        MasAlimentosBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MasAlimentosBotonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(MasAlimentosBoton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonSalir))
                    .addComponent(panelGeneric))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelGeneric, javax.swing.GroupLayout.PREFERRED_SIZE, 461, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(MasAlimentosBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonSalir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(2, 2, 2)))
                .addGap(0, 2, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSalirActionPerformed
        padre.buscarEspecies();
        this.dispose();
    }//GEN-LAST:event_buttonSalirActionPerformed

    private void EspecieNombreCientificoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EspecieNombreCientificoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EspecieNombreCientificoActionPerformed

    private void NombreComunEspecieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NombreComunEspecieActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NombreComunEspecieActionPerformed

    private void AnadirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnadirButtonActionPerformed
        Taxon t = new Taxon((String)TaxonesComboBox.getSelectedItem(), null, null);
        Especie eNueva = new Especie(
            EspecieNombreCientifico.getText(),
            NombreComunEspecie.getText(),
            textoDescripcion.getText(),
            t
        );
        fa.anhadirEspecie(eNueva);
        this.e=eNueva;
    }//GEN-LAST:event_AnadirButtonActionPerformed

    private void ActualizarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ActualizarButtonActionPerformed
        Taxon t = new Taxon((String)TaxonesComboBox.getSelectedItem(), null, null);
        Especie eNueva = new Especie(
            EspecieNombreCientifico.getText(),
            NombreComunEspecie.getText(),
            textoDescripcion.getText(),
            t
        );
        fa.actualizarEspecie(e,eNueva);
        this.e=eNueva;
        refreshVentana();
    }//GEN-LAST:event_ActualizarButtonActionPerformed

    private void BorrarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BorrarButtonActionPerformed
        fa.borrarEspecie(e);
    }//GEN-LAST:event_BorrarButtonActionPerformed

    private void tf_fechaNacmientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_fechaNacmientoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_fechaNacmientoActionPerformed

    private void btn_nuevoEjemplarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_nuevoEjemplarActionPerformed
        if (!moteTF.getText().isEmpty() && !tf_fechaNacmiento.getText().isEmpty()) {
            Ejemplar novoEjemplar = new Ejemplar(new Especie(nombreCientifTF.getText()),
                                                moteTF.getText(),
                                                tf_fechaNacmiento.getText(),
                                                new Area(AreaComboBox.getSelectedItem().toString())
                                                );
            if (fa.novoEjemplar(novoEjemplar) != -1) {
                obtenerEjemplaresGeneric();
            }
        }
    }//GEN-LAST:event_btn_nuevoEjemplarActionPerformed

    private void btn_borrarEjemplarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_borrarEjemplarActionPerformed
        if (!idTF.getText().isEmpty()) {
            
            if (fa.borrarEjemplar(Integer.parseInt(idTF.getText()),nombreCientifTF.getText()) != -1) {
                tf_fechaNacmiento.setText("");
                idTF.setText("");
                moteTF.setText("");
                AreaComboBox.setSelectedIndex(-1);
                obtenerEjemplaresGeneric();
            }
        }
    }//GEN-LAST:event_btn_borrarEjemplarActionPerformed

    private void MenuClinicasBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuClinicasBotonActionPerformed
        int row = tabla_ejemplares.getSelectedRow();
        if(row != -1){
            ModeloTablaEjemplaresGeneral modelEjemplaresGen = (ModeloTablaEjemplaresGeneral) tabla_ejemplares.getModel();
            Ejemplar ejem = modelEjemplaresGen.getFila(row);
            fa.crearVClinica(ejem);
        }
    }//GEN-LAST:event_MenuClinicasBotonActionPerformed

    private void MasAlimentosBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MasAlimentosBotonActionPerformed
            int row = tabla_ejemplares.getSelectedRow();
        if(row != -1){
            ModeloTablaEjemplaresGeneral modelEjemplaresGen = (ModeloTablaEjemplaresGeneral) tabla_ejemplares.getModel();
            Ejemplar ejem = modelEjemplaresGen.getFila(row);
            String nombre = ejem.getEspecie().getNombreCientifico();
            String area = ejem.getArea().getNombreReserva();
            fa.aumentarFrecuenciaAlimentos(nombre, area);
        }
       
    }//GEN-LAST:event_MasAlimentosBotonActionPerformed

    private void btn_ActualizarEjemplarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ActualizarEjemplarActionPerformed
        int filaSeleccionada = tabla_ejemplares.getSelectedRow();

        if (filaSeleccionada != -1) {
            ModeloTablaEjemplaresGeneral modelo = (ModeloTablaEjemplaresGeneral) tabla_ejemplares.getModel();
            Ejemplar viejoEjemplar = modelo.obtenerEjemplar(filaSeleccionada);
            String nuevoMote = moteTF.getText().trim();
            String nuevaFecha = tf_fechaNacmiento.getText().trim();  // Formato: yyyy-MM-dd
            Area nuevaArea = new Area(AreaComboBox.getSelectedItem().toString());

            if (nuevoMote.isEmpty() || nuevaFecha.isEmpty() || nuevaArea == null) {
                JOptionPane.showMessageDialog(this, "Completa todos los campos antes de actualizar.", "Campos incompletos", JOptionPane.WARNING_MESSAGE);
                return;
            }

            try {
                // Crear un nuevo objeto Ejemplar con los datos actualizados
                Ejemplar nuevoEjemplar = new Ejemplar(
                    viejoEjemplar.getId(), 
                    viejoEjemplar.getEspecie(), 
                    nuevoMote, 
                    nuevaFecha, 
                    nuevaArea
                );

                // Llamar al método de la fachada con viejo y nuevo
                fa.actualizarEjemplar(viejoEjemplar, nuevoEjemplar);
                obtenerEjemplaresGeneric();

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Error al actualizar el ejemplar: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }

        } else {
            JOptionPane.showMessageDialog(this, "Debes seleccionar un ejemplar de la tabla.", "Aviso", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btn_ActualizarEjemplarActionPerformed

    private void TaxonesComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TaxonesComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TaxonesComboBoxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ActualizarButton;
    private javax.swing.JButton AnadirButton;
    private javax.swing.JComboBox<String> AreaComboBox;
    private javax.swing.JButton BorrarButton;
    private javax.swing.JTextField EspecieNombreCientifico;
    private javax.swing.JButton MasAlimentosBoton;
    private javax.swing.JButton MenuClinicasBoton;
    private javax.swing.JTextField NombreComunEspecie;
    private javax.swing.JComboBox<String> TaxonesComboBox;
    private javax.swing.JButton btn_ActualizarEjemplar;
    private javax.swing.JButton btn_borrarEjemplar;
    private javax.swing.JButton btn_nuevoEjemplar;
    private javax.swing.JButton buttonSalir;
    private javax.swing.JTextField idTF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel jlabel9;
    private javax.swing.JTextField moteTF;
    private javax.swing.JTextField nombreCientifTF;
    private javax.swing.JPanel panelEj;
    private javax.swing.JPanel panelEsp;
    private javax.swing.JTabbedPane panelGeneric;
    private javax.swing.JTable tabla_ejemplares;
    private javax.swing.JTextField textoDescripcion;
    private javax.swing.JTextField tf_fechaNacmiento;
    // End of variables declaration//GEN-END:variables

    private void refreshAreas() {
        List<Area> listaAreas = fa.obtenerAreas(); // obtener la lista de áreas desde la fachada

        DefaultComboBoxModel<String> modeloComboBox = new DefaultComboBoxModel<>();

        for (Area areaActual : listaAreas) {
            modeloComboBox.addElement(areaActual.getNombreReserva()); // agregar el nombre de cada área al modelo
        }

        AreaComboBox.setModel(modeloComboBox); // establecer el modelo en el ComboBox
    }
    
    private void refreshTaxones() {
        List<Taxon> taxoneslista = fa.obtenerTaxones(); // obtener la lista de taxones

        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();

        Iterator<Taxon> iterator = taxoneslista.iterator();
        while (iterator.hasNext()) {
            Taxon taxon = iterator.next();
            model.addElement(taxon.getNombre()); // suponiendo que el taxon tiene un método getNombre()
        }

        TaxonesComboBox.setModel(model); // asignar el modelo al ComboBox
    }

    
    private void refreshTaxones(Especie e) {
        List<Taxon> taxoneslista = fa.obtenerTaxones(); // obtener la lista de taxones

        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();

        Iterator<Taxon> iterator = taxoneslista.iterator();
        while (iterator.hasNext()) {
            Taxon taxon = iterator.next();
            model.addElement(taxon.getNombre()); // suponiendo que el taxon tiene un método getNombre()
        }

        TaxonesComboBox.setModel(model); // asignar el modelo al ComboBox
        TaxonesComboBox.setSelectedItem(e.getTaxon().getNombre());
    }

    private void refreshVentana() {
        EspecieNombreCientifico.setText(e.getNombreCientifico());
        NombreComunEspecie.setText(e.getNombreComun());
        textoDescripcion.setText(e.getDescripcion());
        refreshAreas();
        refreshTaxones(e);
    }


    private void obtenerEjemplaresGeneric() {
        ModeloTablaEjemplaresGeneral modelEjemplaresGen;
        
        modelEjemplaresGen =(ModeloTablaEjemplaresGeneral) tabla_ejemplares.getModel();
        modelEjemplaresGen.setFilas(fa.obterEjemplares(e));
    
    }
    
    private void listenerSeleccionEjemplar() {
        tabla_ejemplares.addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent me) {
                int row = tabla_ejemplares.getSelectedRow();
                if (row != -1) {
                    MasAlimentosBoton.setEnabled(true);
                    MenuClinicasBoton.setEnabled(true); //activar el botton menu de clinicas
                    String idEjemplar = tabla_ejemplares.getValueAt(row, 0).toString();
                    String mote = tabla_ejemplares.getValueAt(row, 2).toString();
                    String fec_nac = tabla_ejemplares.getValueAt(row, 3).toString();
                    String area_g = tabla_ejemplares.getValueAt(row, 4).toString();
                    int indiceTabla = -1;
                    
                    for (int i = 0; i < AreaComboBox.getItemCount(); i++) {
                        if (AreaComboBox.getItemAt(i).toString().equals(area_g)) {
                            indiceTabla = i;
                            break;
                        }
                    }
                   
                    idTF.setText(idEjemplar);
                    moteTF.setText(mote);
                    tf_fechaNacmiento.setText(fec_nac);
                    AreaComboBox.setSelectedIndex(indiceTabla);
                }else{
                           MenuClinicasBoton.setEnabled(false);   
                           MasAlimentosBoton.setEnabled(false);
                }
            }

            @Override
            public void mousePressed(MouseEvent me) {
               
            }

            @Override
            public void mouseReleased(MouseEvent me) {
               
            }

            @Override
            public void mouseEntered(MouseEvent me) {
                
            }

            @Override
            public void mouseExited(MouseEvent me) {
               
            }

   
        }
        );
    }

}
